class Solution {
    public int[][] candyCrush(int[][] board) {
        int R = board.length, C = board[0].length;
        boolean todo = false;
        for (int i=0; i<R; i++) {
            for (int j=0; j+2<C; j++) {
                int v = Math.abs(board[i][j]);
                if (v != 0 && v == Math.abs(board[i][j+1]) && v == Math.abs(board[i][j+2])) {
                    board[i][j] = board[i][j+1] = board[i][j+2] = -v;
                    todo = true;
                }
            }
        }
        for (int i=0; i+2<R; i++) {
            for (int j=0; j<C; j++) {
                int v = Math.abs(board[i][j]);
                if (v != 0 && v == Math.abs(board[i+1][j]) && v == Math.abs(board[i+2][j])) {
                    board[i][j] = board[i+1][j] = board[i+2][j] = -v;
                    todo = true;
                }
            }
        }
        for (int i=0; i<C; i++) {
            int wr = R-1;
            for (int j=R-1; j>=0; j--) {
                if (board[j][i] > 0) {
                    board[wr--][i] = board[j][i];
                }
            }
            while (wr >= 0) {
                board[wr--][i] = 0;
            }
        }
        return todo ? candyCrush(board) : board;
    }
}
