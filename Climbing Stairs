class Solution {
    public int climbStairs(int n) {
        if (n == 1) {
            return 1;
        }
        int[] dp = new int[n+1];
        dp[1] = 1;
        dp[2] = 2;
        for (int i=3; i<=n; i++) {
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    }
}

class Solution {
    public int climbStairs(int n) {
        return helper(0, n);
    }
    
    public int helper(int i, int j) {
        if (i>j) {
            return 0;
        }
        if (i==j) {
            return 1;
        }
        return helper(i+1, j) + helper(i+2, j);
    }
}
