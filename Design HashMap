class MyHashMap {

    int maxSize = 100000;
    Integer[] hashmap;
    
    /** Initialize your data structure here. */
    public MyHashMap() {
        hashmap = new Integer[maxSize];
    }
    
    /** value will always be non-negative. */
    public void put(int key, int value) {
        int index = key % maxSize;
        hashmap[index] = value;
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    public int get(int key) {
        int index = key % maxSize;
        if (hashmap[index] != null) {
            return hashmap[index];
        }
            return -1;
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    public void remove(int key) {
        int index = key % maxSize;
        if (hashmap[index] != null) {
            hashmap[index] = null;
        }
    }
}

class MyHashMap {

    int maxSize = 100000;
    Integer[] hashmap;
    
    /** Initialize your data structure here. */
    public MyHashMap() {
        hashmap = new Integer[maxSize];
        Arrays.fill(hashmap, -1);
    }
    
    /** value will always be non-negative. */
    public void put(int key, int value) {
        hashmap[key] = value;
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    public int get(int key) {
        return hashmap[key];
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    public void remove(int key) {
        hashmap[key] = -1;
    }
}

