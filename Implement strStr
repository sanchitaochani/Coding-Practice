class Solution {
    public int strStr(String haystack, String needle) {
        if (needle.length()==0)
            return 0;
        int n = needle.length();
        for (int i=0; i<haystack.length()-n+1; i++) {
            String s = haystack.substring(i,i+n);
            if (s.equals(needle))
                return i;
        }
         if (needle.length() == haystack.length()) {
            if (needle.equals(haystack))
                return 0;
        }
        return -1;
    }
}

class Solution {
    public int strStr(String haystack, String needle) {
        if (needle.length() == 0) {
            return 0;
        }
        if (haystack.length() == needle.length()) {
            if (haystack.equals(needle)) {
                return 0;
            }
        }
        int n = needle.length();
        int h = haystack.length();
        int p1 = 0;
        while (p1 < h - n + 1) {
            int p2 = 0;
            while (p1 < h - n + 1 && haystack.charAt(p1) != needle.charAt(p2)) {
                p1++;
            }
            int len = 0;
            while (p1 < h && p2 < n && haystack.charAt(p1) == needle.charAt(p2)) {
                p1++;
                p2++;
                len++;
            }
            if (len == n) {
                return p1 - len;
            }
            p1 = p1 - len + 1;
        }
        return -1;
    }
}
