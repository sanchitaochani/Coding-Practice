class Solution {
    TreeNode curr;
    public TreeNode increasingBST(TreeNode root) {
        TreeNode result = new TreeNode(0);
        curr = result;
        inorder(root);
        return result.right;
    }
    
    public void inorder(TreeNode node) {
        if (node == null) {
            return;
        }
        inorder(node.left);
        node.left = null;
        curr.right = node;
        curr = node;
        inorder(node.right);
    }
}

class Solution {
    List<Integer> values = new ArrayList<>();
    public TreeNode increasingBST(TreeNode root) {
        inorder(root);
        TreeNode result = new TreeNode(0);
        TreeNode curr = result;
        for (int i=0; i<values.size(); i++) {
            curr.right = new TreeNode(values.get(i));
            curr = curr.right;
        }
        return result.right;
    }
    
    public void inorder(TreeNode node) {
        if (node == null) {
            return;
        }
        inorder(node.left);
        node.left = null;
        values.add(node.val);
        inorder(node.right);
    }
}
