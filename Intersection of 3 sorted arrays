class Solution {
    public List<Integer> arraysIntersection(int[] arr1, int[] arr2, int[] arr3) {
        HashMap<Integer, Integer> map = new HashMap<>();
        List<Integer> result = new ArrayList<>();
        for (int i=0; i<arr1.length; i++) {
            map.put(arr1[i], map.getOrDefault(arr1[i], 0) + 1);
            map.put(arr2[i], map.getOrDefault(arr2[i], 0) + 1);
            map.put(arr3[i], map.getOrDefault(arr3[i], 0) + 1);
        }
        for (Integer item: map.keySet()) {
            if (map.get(item) == 3) {
                result.add(item);
            }
        }
        return result;
    }
}

class Solution {
    public List<Integer> arraysIntersection(int[] arr1, int[] arr2, int[] arr3) {
        List<Integer> result = new ArrayList<>();
        int x = 0, y = 0, z = 0;
        while (x < arr1.length && y < arr2.length && z < arr3.length) {
            if (arr1[x] == arr2[y] && arr2[y] == arr3[z]) {
                result.add(arr1[x]);
                x++;
                y++;
                z++;
            } else {
                if (arr1[x] < arr2[y]) {
                    x++;
                } else if (arr2[y] < arr3[z]) {
                    y++;
                } else {
                    z++;
                }
            }
        }
        return result;
    }
}
