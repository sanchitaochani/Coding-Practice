/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    List<Integer> list1 = new ArrayList<>();
    List<Integer> list2 = new ArrayList<>();
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        dfs(root1, list1);
        dfs(root2, list2);
        if (list1.size() == list2.size()) {
            for (int i=0; i<list1.size(); i++) {
                if (list1.get(i)!=list2.get(i))
                    return false;
            }
            return true;
        }
        else
            return false;
    }
    
    public void dfs(TreeNode node, List<Integer> val) {
        if (node == null)
            return;
        if (node.left == null && node.right == null) {
            //System.out.println(node.val);
            val.add(node.val);
        }
        if (node.left != null)
            dfs(node.left, val);
        if (node.right != null)
            dfs(node.right, val);
        
    }
}
