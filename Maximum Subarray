class Solution {
    public int maxSubArray(int[] nums) {
        int maxSum = Integer.MIN_VALUE;
        if (nums.length == 1) {
            maxSum = nums[0];
        }
        for (int i=0; i<nums.length; i++) {
            int currSum = 0;
            for (int j=i; j<nums.length; j++) {
                currSum += nums[j];
                if (currSum > maxSum) {
                    maxSum = currSum;
                }
            }
        }
        return maxSum;
    }
}

class Solution {
    public int maxSubArray(int[] nums) {
        int currSum = nums[0];
        int maxSum = nums[0];
        for (int i=1; i<nums.length; i++) {
            currSum = Math.max(nums[i], nums[i] + currSum);
            maxSum = Math.max(currSum, maxSum);
        }
        return maxSum;
    }
}

class Solution {
    public int maxSubArray(int[] nums) {
        int maxSum = nums[0];
        for (int i=1; i<nums.length; i++) {
            if (nums[i-1] > 0) {
                nums[i] = nums[i] + nums[i-1];
            }
            maxSum = Math.max(nums[i], maxSum);
        }
        return maxSum;
    }
}
