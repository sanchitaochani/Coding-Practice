class Solution {
    public int[][] merge(int[][] intervals) {
        if (intervals.length == 1) {
            return intervals;
        }
        Arrays.sort(intervals, new Comparator<int[]>() {
            public int compare(int[] a, int b[]) {
                return a[0] - b[0];
            }
        });
        LinkedList<int[]> queue = new LinkedList<>();
        for (int i=0; i<intervals.length; i++) {
            if (queue.isEmpty() || queue.getLast()[1] < intervals[i][0]) {
                queue.add(intervals[i]);
            } else {
                queue.getLast()[1] = Math.max(queue.getLast()[1], intervals[i][1]);
            }
        }
        int[][] result = new int[queue.size()][];
        return queue.toArray(result);
    }
}
