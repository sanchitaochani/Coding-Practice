class Solution {
    public int minTimeToVisitAllPoints(int[][] points) {
        int distance = 0;
        for (int i=0; i<points.length-1; i++) {
            distance += minDistance(points[i], points[i+1]);
        }
        return distance;
    }
    
    public int minDistance(int[] p1, int[] p2) {
        int x1 = p1[0], y1 = p1[1], x2 = p2[0], y2 = p2[1];
        return Math.max(Math.abs(x2-x1), Math.abs(y2 - y1));
    }
}

class Solution {
    public int minTimeToVisitAllPoints(int[][] points) {
        int distance = 0;
        for (int i=0; i<points.length-1; i++) {
            distance += minDistance(points[i], points[i+1]);
        }
        return distance;
    }
    
    public int minDistance(int[] p1, int[] p2) {
        int x1 = p1[0], y1 = p1[1], x2 = p2[0], y2 = p2[1];
        int result = 0;
        while (x1 != x2 && y1 != y2) {
            if (x1 < x2) {
                x1++;
            } else {
                x2++;
            }
            if (y1 < y2) {
                y1++;
            } else {
                y2++;
            }
            result++;
        }
        while (x1 != x2) {
            if (x1 < x2) {
                x1++;
            } else {
                x2++;
            }
            result++;
        }
        while (y1 != y2) {
            if (y1 < y2) {
                y1++;
            } else {
                y2++;
            }
            result++;
        }
        return result;
    }
}
