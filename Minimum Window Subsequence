class Solution {
    public String minWindow(String S, String T) {
        if (T.length() == 1) {
            return S.indexOf(T.charAt(0)) == -1 ? "" : T;
        }
        int lenS = S.length(), lenT = T.length();
        String result = "";
        int minLength = S.length();
        for (int i=0; i<lenS; i++) {
            for (int j=i+1; j<=lenS; j++) {
                String temp = S.substring(i, j);
                if(isSubsequence(temp, T)) {
                    if (temp.length() < minLength) {
                        minLength = temp.length();
                    }
                    if (result.isEmpty() || temp.length() < result.length()) {
                        result = temp;
                    }
                    break;
                }
            }
        }
        return result;
    }
    
    public boolean isSubsequence(String s1, String s2) {
        if (s1.length() == s2.length() && s1.equals(s2)) {
            return true;
        }
        int matches = 0;
        int j=0;
        for (int i=0; i<s1.length(); i++) {
            if (s1.charAt(i) == s2.charAt(j)) {
                matches++;
                j++;
            }
        }
        return matches == s2.length(); 
    }
}
