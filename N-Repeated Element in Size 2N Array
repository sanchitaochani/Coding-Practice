class Solution {
    public int repeatedNTimes(int[] A) {
        HashMap<Integer, Integer> uniqueValues=new HashMap<>();
        for (int i=0; i<A.length; i++) {
            if (uniqueValues.containsKey(A[i]))
                return A[i];
            uniqueValues.put(A[i],i);
        }
        return 0;
    }
}

class Solution {
    public int repeatedNTimes(int[] A) {
        Arrays.sort(A);
        for (int i=0; i<A.length-1; i++) {
            if (A[i] == A[i+1]) {
                return A[i];
            }
        }
        return -1;
    }
}

class Solution {
    public int repeatedNTimes(int[] A) {
        for (int i=1; i<=3; i++) {
            for (int j=0; j<A.length-i; j++) {
                if (A[j] == A[i+j]) {
                    return A[j];
                }
            }
        }
        return -1;
    }
}
