/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    List<Integer> values = new ArrayList<>();
    public List<Integer> postorder(Node root) {
        traverse(root);
        return values;
    }
    
    public void traverse(Node node) {
        if (node==null)
            return;
        List<Node> temp = node.children;
        if (temp.size()==0) {
            values.add(node.val);
            return;
        }
        else {
            for (int i=0; i<temp.size(); i++) {
                //Node n = temp.get(i);
                traverse(n);
                
            }
        }
        values.add(node.val);
    }
}
