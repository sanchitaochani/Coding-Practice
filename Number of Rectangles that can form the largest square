class Solution {
    public int countGoodRectangles(int[][] rectangles) {
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i=0; i<rectangles.length; i++) {
            int min = Math.min(rectangles[i][0], rectangles[i][1]);
            map.put(min, map.getOrDefault(min, 0) + 1);
        }
        Map.Entry<Integer, Integer> maxEntry = null;
        for (Map.Entry<Integer, Integer> entry: map.entrySet()) {
            if (maxEntry == null || (entry.getKey() > maxEntry.getKey())) {
                maxEntry = entry;
            }
        }
        return maxEntry.getValue();
    }
}

class Solution {
    public int countGoodRectangles(int[][] rectangles) {
        HashMap<Integer, Integer> map = new HashMap<>();
        int maxLength = 0;
        for (int i=0; i<rectangles.length; i++) {
            int min = Math.min(rectangles[i][0], rectangles[i][1]);
            map.put(min, map.getOrDefault(min, 0) + 1);
            maxLength = Math.max(maxLength, min);
        }
        return map.get(maxLength);
    }
}
