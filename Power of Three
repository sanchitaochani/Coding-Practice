class Solution {
    public boolean isPowerOfThree(int n) {
        if (n < 1) {
            return false;
        }
        while (n % 3 == 0) {
            n = n / 3;
        }
        return n == 1;
    }
}


/ **
* Explanation : In Base 10, all powers of 10 start with the digit 1 and then are followed only by 0 (e.g. 10, 100, 1000). 
* This is true for other bases and their respective powers. 
* Therefore if we convert our number to base 3 and the representation is of the form 100...0, then the number is a power of 3.
* Having just one digit of 1 and everything else 0 means the number is a power of 3.
** /
class Solution {
    public boolean isPowerOfThree(int n) {
        return Integer.toString(n, 3).matches("^10*$");
    }
}
