class Solution {
    public int searchInsert(int[] nums, int target) {
        if (target <= nums[0]) {
            return 0;
        }
        int i = 1;
        while (i<nums.length-1) {
            if (target <= nums[i]) {
                return i;
            }
            else if (target > nums[i] && target < nums[i+1]) {
                return i+1;
            }
            i++;
        }
        if (i == nums.length-1 && target <= nums[i]) {
            return nums.length - 1;
        } else {
            return nums.length;
        }
    }
}

class Solution {
    public int searchInsert(int[] nums, int target) {
        int left = 0, right = nums.length - 1;
        int mid = 0;
        while (left <= right) {
            mid = left + (right - left) / 2;
            if (nums[mid] == target) {
                return mid;
            }
            if (target < nums[mid]) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return left;
    }
}
