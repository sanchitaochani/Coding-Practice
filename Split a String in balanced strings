class Solution {
    public int balancedStringSplit(String s) {
        Stack<Character> stack = new Stack<>();
        int count = 0;
        for (int i=0; i<s.length(); i++) {
            if (!stack.isEmpty() && stack.peek() != s.charAt(i)) {
                stack.pop();
            } else {
                stack.push(s.charAt(i));
            }
            if (stack.isEmpty()) count++;
        }
        return count;
    }
}

class Solution {
    public int balancedStringSplit(String s) {
        int count = 0;
        int counter = 0;
        for (int i=0; i<s.length(); i++) {
            if (s.charAt(i) == 'R') {
                counter++;
            }
            if (s.charAt(i) == 'L') {
                counter--;
            }
            if (counter == 0) {
                count++;
            }
        }
        return count;
    }
}
