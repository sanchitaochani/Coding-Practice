class StreamChecker {
    
    class TrieNode {
        TrieNode[] children = new TrieNode[26];
        boolean isEnd;
    }

    TrieNode root = new TrieNode();
    StringBuilder str = new StringBuilder();
    public StreamChecker(String[] words) {
        for (String word: words) {
            insert(word);
        }
    }
    
    public boolean query(char letter) {
        str.append(letter);
        TrieNode node = root;
        for (int i=str.length()-1; i>=0; i--) {
            char ch = str.charAt(i);
            node = node.children[ch - 'a'];
            if (node != null && node.isEnd) {
                return true;
            }
            if (node == null) {
                return false;
            }
        }
        return false;
    }
    
    public void insert(String word) {
        TrieNode node = root;
        for (int i=word.length()-1; i>=0; i--) {
            char ch = word.charAt(i);
            if (node.children[ch - 'a'] == null) {
                node.children[ch - 'a'] = new TrieNode();
            }
            node = node.children[ch - 'a'];
        }
        node.isEnd = true;
    }
}
